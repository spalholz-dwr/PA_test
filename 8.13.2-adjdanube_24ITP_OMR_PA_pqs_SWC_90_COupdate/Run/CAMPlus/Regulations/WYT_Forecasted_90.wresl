! water year type definitions

! Ryan Wilbur 8-5-03

!************************************************************************************************

! Shasta criteria designates as critical if: 
!   a. current year natural inflow to shasta reservoir is equal to or less than 3.2 MAF;
!   b. deficiencies for current and previous year below 4 MAF is greater than 800 TAF;
! Forecasts are based on median exceedence level (50%)

!actual inflow:
define I3_known {timeseries 'I4' kind 'FLOW-INFLOW' units 'TAF'}

!forecasted inflow:
define I3Jan50 {timeseries 'SHA_Jan_50' kind 'FLOW' units 'TAF'}
define I3Feb50 {timeseries 'SHA_Feb_50' kind 'FLOW' units 'TAF'}
define I3Mar50 {timeseries 'SHA_Mar_50' kind 'FLOW' units 'TAF'}
define I3Apr50 {timeseries 'SHA_Apr_50' kind 'FLOW' units 'TAF'}
define I3May50 {timeseries 'SHA_May_50' kind 'FLOW' units 'TAF'}
define I3Jun50 {timeseries 'SHA_Jun_50' kind 'FLOW' units 'TAF'}

!set monthly flows
define I3_Jan50 {case a{condition month==JAN value I3Jan50( 4-month)}case b{condition always value I3_known(4-month)}}
define I3_Feb50 {case a{condition month==JAN value I3Jan50( 5-month)}case b{condition month==Feb value I3Feb50( 5-month)}case c{condition always value I3_known(5-month)}}
define I3_Mar50 {case a{condition month==JAN value I3Jan50( 6-month)}case b{condition month==Feb value I3Feb50( 6-month)}case c{condition month==Mar value I3Mar50( 6-month)}case d{condition always value I3_known(6-month)}}
define I3_Apr50 {case a{condition month==JAN value I3Jan50( 7-month)}case b{condition month==Feb value I3Feb50( 7-month)}case c{condition month==Mar value I3Mar50( 7-month)}case d{condition month==Apr value I3Apr50( 7-month)}case e{condition always value I3_known(7-month)}}
define I3_May50 {case a{condition month==JAN value I3Jan50( 8-month)}case b{condition month==Feb value I3Feb50( 8-month)}case c{condition month==Mar value I3Mar50( 8-month)}case d{condition month==Apr value I3Apr50( 8-month)}case e{condition month==May value I3May50( 8-month)}case f{condition always value I3_known(8-month)}}
define I3_Jun50 {case a{condition month==JAN value I3Jan50( 9-month)}case b{condition month==Feb value I3Feb50( 9-month)}case c{condition month==Mar value I3Mar50( 9-month)}case d{condition month==Apr value I3Apr50( 9-month)}case e{condition month==May value I3May50( 9-month)}case f{condition always value I3Jun50( 9-month)}}
define I3_Jul50 {case a{condition month==JAN value I3Jan50(10-month)}case b{condition month==Feb value I3Feb50(10-month)}case c{condition month==Mar value I3Mar50(10-month)}case d{condition month==Apr value I3Apr50(10-month)}case e{condition month==May value I3May50(10-month)}case f{condition always value I3Jun50(10-month)}}
define I3_Aug50 {case a{condition month==JAN value I3Jan50(11-month)}case b{condition month==Feb value I3Feb50(11-month)}case c{condition month==Mar value I3Mar50(11-month)}case d{condition month==Apr value I3Apr50(11-month)}case e{condition month==May value I3May50(11-month)}case f{condition always value I3Jun50(11-month)}}
define I3_Sep50 {case a{condition month==JAN value I3Jan50(12-month)}case b{condition month==Feb value I3Feb50(12-month)}case c{condition month==Mar value I3Mar50(12-month)}case d{condition month==Apr value I3Apr50(12-month)}case e{condition month==May value I3May50(12-month)}case f{condition always value I3Jun50(12-month)}}
define I3_Oct50 {select SHA from CAM_Fall where month=1,EXC=50}
define I3_Nov50 {select SHA from CAM_Fall where month=2,EXC=50}
define I3_Dec50 {select SHA from CAM_Fall where month=3,EXC=50}

!annual total for current year
define I3sum {value I3_Jan50 +
            I3_Feb50 +
            I3_Mar50 +
            I3_Apr50 +
            I3_May50 +
            I3_Jun50 +
            I3_Jul50 +
            I3_Aug50 +
            I3_Sep50 +
            I3_Oct50 +
            I3_Nov50 +
            I3_Dec50}
define I3_50sum {alias I3sum kind 'FLOW' units 'TAF'}

!annual total for last year
define I3_lastyr{
  case a{
    condition wateryear == 1922 .or. wateryear == 2003
    value 4001.}
  case b{
    condition always
    value I3_known( 4-month-12) +
          I3_known( 5-month-12) +
          I3_known( 6-month-12) +
          I3_known( 7-month-12) +
          I3_known( 8-month-12) +
          I3_known( 9-month-12) +
          I3_known(10-month-12) +
          I3_known(11-month-12) +
          I3_known(12-month-12) +
          I3_known( 1-month-12) +
          I3_known( 2-month-12) +
          I3_known( 3-month-12)}
}          
define I3_50sum_prv {alias I3_lastyr kind 'FLOW' units 'TAF'}

!deficiency total when current and last year are below 4MAF
define I3_2yr_low {
  case a{
    condition I3sum <= 4000. .and. I3_lastyr <= 4000.
    value 8000. - I3sum - I3_lastyr}
  case b{
    condition always
    value 0.}
}

!if criteria is met =1; if not met =0
define ShastaCriteriaMet {
  case a{
    condition I3sum <= 3200. .or. I3_2yr_low >= 800.
    value 1.}
  case b{
    condition always
    value 0}
}
define ShaCrit {alias ShastaCriteriaMet kind 'none' units 'none'}

!************************************************************************************************

! Oroville criteria designates a "drought" if:
!   a. unimpaired apr-jul oroville inflow is less than 600 TAF;
!   b. deficiencies for current and previous year(s) below 2.5 MAF is greater than 400 TAF;
! Forecasts are based on median exceedence level (50%)

/*!if criteria is met =1; if not met =0
define OrovilleDrought {select FEATHERindex from wytypes where wateryear=wateryear}
define OroDrght {alias OrovilleDrought kind 'none' units 'none'}*/

!actual inflow:
define I4_known {timeseries 'I6' kind 'FLOW-INFLOW' units 'TAF'}

!forecasted inflow:
define I4Jan50 {timeseries 'ORO_Jan_50' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define I4Feb50 {timeseries 'ORO_Feb_50' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define I4Mar50 {timeseries 'ORO_Mar_50' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define I4Apr50 {timeseries 'ORO_Apr_50' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define I4May50 {timeseries 'ORO_May_50' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define I4Jun50 {timeseries 'ORO_Jun_50' kind 'FLOW-UNIMPAIRED' units 'TAF'}

!set monthly flows
define I4_Jan50 {case a{condition month==JAN value I4Jan50( 4-month)}case b{condition always value I4_known(4-month)}}
define I4_Feb50 {case a{condition month==JAN value I4Jan50( 5-month)}case b{condition month==Feb value I4Feb50( 5-month)}case c{condition always value I4_known(5-month)}}
define I4_Mar50 {case a{condition month==JAN value I4Jan50( 6-month)}case b{condition month==Feb value I4Feb50( 6-month)}case c{condition month==Mar value I4Mar50( 6-month)}case d{condition always value I4_known(6-month)}}
define I4_Apr50 {case a{condition month==JAN value I4Jan50( 7-month)}case b{condition month==Feb value I4Feb50( 7-month)}case c{condition month==Mar value I4Mar50( 7-month)}case d{condition month==Apr value I4Apr50( 7-month)}case e{condition always value I4_known(7-month)}}
define I4_May50 {case a{condition month==JAN value I4Jan50( 8-month)}case b{condition month==Feb value I4Feb50( 8-month)}case c{condition month==Mar value I4Mar50( 8-month)}case d{condition month==Apr value I4Apr50( 8-month)}case e{condition month==May value I4May50( 8-month)}case f{condition always value I4_known(8-month)}}
define I4_Jun50 {case a{condition month==JAN value I4Jan50( 9-month)}case b{condition month==Feb value I4Feb50( 9-month)}case c{condition month==Mar value I4Mar50( 9-month)}case d{condition month==Apr value I4Apr50( 9-month)}case e{condition month==May value I4May50( 9-month)}case f{condition always value I4Jun50( 9-month)}}
define I4_Jul50 {case a{condition month==JAN value I4Jan50(10-month)}case b{condition month==Feb value I4Feb50(10-month)}case c{condition month==Mar value I4Mar50(10-month)}case d{condition month==Apr value I4Apr50(10-month)}case e{condition month==May value I4May50(10-month)}case f{condition always value I4Jun50(10-month)}}
define I4_Aug50 {case a{condition month==JAN value I4Jan50(11-month)}case b{condition month==Feb value I4Feb50(11-month)}case c{condition month==Mar value I4Mar50(11-month)}case d{condition month==Apr value I4Apr50(11-month)}case e{condition month==May value I4May50(11-month)}case f{condition always value I4Jun50(11-month)}}
define I4_Sep50 {case a{condition month==JAN value I4Jan50(12-month)}case b{condition month==Feb value I4Feb50(12-month)}case c{condition month==Mar value I4Mar50(12-month)}case d{condition month==Apr value I4Apr50(12-month)}case e{condition month==May value I4May50(12-month)}case f{condition always value I4Jun50(12-month)}}
define I4_Oct50 {select ORO from CAM_Fall where month=1,EXC=50}
define I4_Nov50 {select ORO from CAM_Fall where month=2,EXC=50}
define I4_Dec50 {select ORO from CAM_Fall where month=3,EXC=50}

!annual total for current year
define I4sum {value I4_Jan50 +
            I4_Feb50 +
            I4_Mar50 +
            I4_Apr50 +
            I4_May50 +
            I4_Jun50 +
            I4_Jul50 +
            I4_Aug50 +
            I4_Sep50 +
            I4_Oct50 +
            I4_Nov50 +
            I4_Dec50}
define I4_50sum {alias I4sum kind 'FLOW' units 'TAF'}

!apr-jul total
define I4_apr_jul {value I4_Apr50 + I4_May50 + I4_Jun50 + I4_Jul50}
define I4_50apr_jul {alias I4_apr_jul kind 'FLOW' units 'TAF'}

!annual total for last year
define I4_lastyr{
  case a{
    condition wateryear == 1922 .or. wateryear == 2003
    value 4001.}
  case b{
    condition always
    value I4_known( 4-month-12) +
          I4_known( 5-month-12) +
          I4_known( 6-month-12) +
          I4_known( 7-month-12) +
          I4_known( 8-month-12) +
          I4_known( 9-month-12) +
          I4_known(10-month-12) +
          I4_known(11-month-12) +
          I4_known(12-month-12) +
          I4_known( 1-month-12) +
          I4_known( 2-month-12) +
          I4_known( 3-month-12)}
}          
define I4_50sum_prv {alias I4_lastyr kind 'FLOW' units 'TAF'}

!deficiency total when current and last year are below 2.5MAF
define I4_2yr_low {
  case a{
    condition I4sum <= 2500. .and. I4_lastyr <= 2500.
    value 5000. - I4sum - I4_lastyr}
  case b{
    condition always
    value 0.}
}

!if criteria is met =1; if not met =0
define OrovilleDrought {
  case a{
    condition I4_apr_jul <= 600. .or. I4_2yr_low >= 400.
    value 1.}
  case b{
    condition always
    value 0}
}
define OroDrght {alias OrovilleDrought kind 'none' units 'none'}

!************************************************************************************************

!40-30-30 Sac Valley Index
! Index = 0.4*Apr_Jul + 0.3*Oct_Mar + 0.3*Prv_Year_Index (MAF)
! runoff is unimpaired total of: Sac River at Bend Bridge (Red Bluff)
!                                Oroville Reservoir inflow
!                                Folsom Lake inflow
!                                Yuba River near Smartville
! maximum previous year index total of 10 MAF

!unimpaired Oroville inflow:
define Feath {timeseries 'I6' kind 'FLOW-INFLOW' units 'TAF'}
define Feath_Jan {timeseries 'ORO_Jan_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Feath_Feb {timeseries 'ORO_Feb_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Feath_Mar {timeseries 'ORO_Mar_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Feath_Apr {timeseries 'ORO_Apr_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Feath_May {timeseries 'ORO_May_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Feath_Jun {timeseries 'ORO_Jun_50' kind 'FLOW-UNIMPAIRED' units 'TAF'} !only 50% available
define F_Oct {value Feath(1-month)}
define F_Nov {value Feath(2-month)}
define F_Dec {value Feath(3-month)}
define F_Jan {case a{condition month==JAN value Feath_Jan( 4-month)}case b{condition always value Feath(4-month)}}
define F_Feb {case a{condition month==JAN value Feath_Jan( 5-month)}case b{condition month==Feb value Feath_Feb( 5-month)}case c{condition always value Feath(5-month)}}
define F_Mar {case a{condition month==JAN value Feath_Jan( 6-month)}case b{condition month==Feb value Feath_Feb( 6-month)}case c{condition month==Mar value Feath_Mar( 6-month)}case d{condition always value Feath(6-month)}}
define F_Apr {case a{condition month==JAN value Feath_Jan( 7-month)}case b{condition month==Feb value Feath_Feb( 7-month)}case c{condition month==Mar value Feath_Mar( 7-month)}case d{condition month==Apr value Feath_Apr( 7-month)}case e{condition always value Feath(7-month)}}
define F_May {case a{condition month==JAN value Feath_Jan( 8-month)}case b{condition month==Feb value Feath_Feb( 8-month)}case c{condition month==Mar value Feath_Mar( 8-month)}case d{condition month==Apr value Feath_Apr( 8-month)}case e{condition month==May value Feath_May( 8-month)}case f{condition always value Feath(8-month)}}
define F_Jun {case a{condition month==JAN value Feath_Jan( 9-month)}case b{condition month==Feb value Feath_Feb( 9-month)}case c{condition month==Mar value Feath_Mar( 9-month)}case d{condition month==Apr value Feath_Apr( 9-month)}case e{condition month==May value Feath_May( 9-month)}case f{condition always value Feath_Jun( 9-month)}}
define F_Jul {case a{condition month==JAN value Feath_Jan(10-month)}case b{condition month==Feb value Feath_Feb(10-month)}case c{condition month==Mar value Feath_Mar(10-month)}case d{condition month==Apr value Feath_Apr(10-month)}case e{condition month==May value Feath_May(10-month)}case f{condition always value Feath_Jun(10-month)}}

define Feath_Oct_Mar {value F_Oct/1000. + F_Nov/1000. + F_Dec/1000. + F_Jan/1000. + F_Feb/1000. + F_Mar/1000.}
define Feath_Apr_Jul {value F_Apr/1000. + F_May/1000. + F_Jun/1000. + F_Jul/1000.}

!unimpaired Yuba flow:
define Yuba {timeseries 'I211' kind 'FLOW-INFLOW' units 'CFS' convert 'TAF'}
define Yunmp_Jan {timeseries 'YUB_Jan_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Yunmp_Feb {timeseries 'YUB_Feb_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Yunmp_Mar {timeseries 'YUB_Mar_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Yunmp_Apr {timeseries 'YUB_Apr_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Yunmp_May {timeseries 'YUB_May_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Yunmp_Jun {timeseries 'YUB_Jun_50' kind 'FLOW-UNIMPAIRED' units 'TAF'} !only 50% available
define Y_Oct {value Yuba(1-month)}
define Y_Nov {value Yuba(2-month)}
define Y_Dec {value Yuba(3-month)}
define Y_Jan {case a{condition month==JAN value Yunmp_Jan( 4-month)}case b{condition always value Yuba(4-month)}}
define Y_Feb {case a{condition month==JAN value Yunmp_Jan( 5-month)}case b{condition month==Feb value Yunmp_Feb( 5-month)}case c{condition always value Yuba(5-month)}}
define Y_Mar {case a{condition month==JAN value Yunmp_Jan( 6-month)}case b{condition month==Feb value Yunmp_Feb( 6-month)}case c{condition month==Mar value Yunmp_Mar( 6-month)}case d{condition always value Yuba(6-month)}}
define Y_Apr {case a{condition month==JAN value Yunmp_Jan( 7-month)}case b{condition month==Feb value Yunmp_Feb( 7-month)}case c{condition month==Mar value Yunmp_Mar( 7-month)}case d{condition month==Apr value Yunmp_Apr( 7-month)}case e{condition always value Yuba(7-month)}}
define Y_May {case a{condition month==JAN value Yunmp_Jan( 8-month)}case b{condition month==Feb value Yunmp_Feb( 8-month)}case c{condition month==Mar value Yunmp_Mar( 8-month)}case d{condition month==Apr value Yunmp_Apr( 8-month)}case e{condition month==May value Yunmp_May( 8-month)}case f{condition always value Yuba(8-month)}}
define Y_Jun {case a{condition month==JAN value Yunmp_Jan( 9-month)}case b{condition month==Feb value Yunmp_Feb( 9-month)}case c{condition month==Mar value Yunmp_Mar( 9-month)}case d{condition month==Apr value Yunmp_Apr( 9-month)}case e{condition month==May value Yunmp_May( 9-month)}case f{condition always value Yunmp_Jun( 9-month)}}
define Y_Jul {case a{condition month==JAN value Yunmp_Jan(10-month)}case b{condition month==Feb value Yunmp_Feb(10-month)}case c{condition month==Mar value Yunmp_Mar(10-month)}case d{condition month==Apr value Yunmp_Apr(10-month)}case e{condition month==May value Yunmp_May(10-month)}case f{condition always value Yunmp_Jun(10-month)}}

define Yuba_Oct_Mar {value Y_Oct/1000. + Y_Nov/1000. + Y_Dec/1000. + Y_Jan/1000. + Y_Feb/1000. + Y_Mar/1000.}
define Yuba_Apr_Jul {value Y_Apr/1000. + Y_May/1000. + Y_Jun/1000. + Y_Jul/1000.}

!unimpaired Folsom inflow:
define Amer {timeseries 'I8' kind 'FLOW-INFLOW' units 'CFS' convert 'TAF'}
define Amer_Jan {timeseries 'FOL_Jan_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Amer_Feb {timeseries 'FOL_Feb_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Amer_Mar {timeseries 'FOL_Mar_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Amer_Apr {timeseries 'FOL_Apr_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Amer_May {timeseries 'FOL_May_90' kind 'FLOW-UNIMPAIRED' units 'TAF'}
define Amer_Jun {timeseries 'FOL_Jun_50' kind 'FLOW-UNIMPAIRED' units 'TAF'} !only 50% available
define Am_Oct {value Amer(1-month)}
define Am_Nov {value Amer(2-month)}
define Am_Dec {value Amer(3-month)}
define Am_Jan {case a{condition month==JAN value Amer_Jan( 4-month)}case b{condition always value Amer(4-month)}}
define Am_Feb {case a{condition month==JAN value Amer_Jan( 5-month)}case b{condition month==Feb value Amer_Feb( 5-month)}case c{condition always value Amer(5-month)}}
define Am_Mar {case a{condition month==JAN value Amer_Jan( 6-month)}case b{condition month==Feb value Amer_Feb( 6-month)}case c{condition month==Mar value Amer_Mar( 6-month)}case d{condition always value Amer(6-month)}}
define Am_Apr {case a{condition month==JAN value Amer_Jan( 7-month)}case b{condition month==Feb value Amer_Feb( 7-month)}case c{condition month==Mar value Amer_Mar( 7-month)}case d{condition month==Apr value Amer_Apr( 7-month)}case e{condition always value Amer(7-month)}}
define Am_May {case a{condition month==JAN value Amer_Jan( 8-month)}case b{condition month==Feb value Amer_Feb( 8-month)}case c{condition month==Mar value Amer_Mar( 8-month)}case d{condition month==Apr value Amer_Apr( 8-month)}case e{condition month==May value Amer_May( 8-month)}case f{condition always value Amer(8-month)}}
define Am_Jun {case a{condition month==JAN value Amer_Jan( 9-month)}case b{condition month==Feb value Amer_Feb( 9-month)}case c{condition month==Mar value Amer_Mar( 9-month)}case d{condition month==Apr value Amer_Apr( 9-month)}case e{condition month==May value Amer_May( 9-month)}case f{condition always value Amer_Jun( 9-month)}}
define Am_Jul {case a{condition month==JAN value Amer_Jan(10-month)}case b{condition month==Feb value Amer_Feb(10-month)}case c{condition month==Mar value Amer_Mar(10-month)}case d{condition month==Apr value Amer_Apr(10-month)}case e{condition month==May value Amer_May(10-month)}case f{condition always value Amer_Jun(10-month)}}

define Amer_Oct_Mar {value Am_Oct/1000. + Am_Nov/1000. + Am_Dec/1000. + Am_Jan/1000. + Am_Feb/1000. + Am_Mar/1000.}
define Amer_Apr_Jul {value Am_Apr/1000. + Am_May/1000. + Am_Jun/1000. + Am_Jul/1000.}

!unimpaired Sac River flow at Bend Bridge near Red Bluff:
! sum of unimpaired Shasta inflow + unimpaired Whiskeytown inflow + dsa 58 contribution

!unimpaired Shasta inflow:
define Sac {timeseries 'I4' kind 'FLOW-INFLOW' units 'TAF'}
define Sac_Jan {timeseries 'SHA_Jan_90' kind 'FLOW' units 'TAF'}
define Sac_Feb {timeseries 'SHA_Feb_90' kind 'FLOW' units 'TAF'}
define Sac_Mar {timeseries 'SHA_Mar_90' kind 'FLOW' units 'TAF'}
define Sac_Apr {timeseries 'SHA_Apr_90' kind 'FLOW' units 'TAF'}
define Sac_May {timeseries 'SHA_May_50' kind 'FLOW' units 'TAF'} !only 50% available
define Sac_Jun {timeseries 'SHA_Jun_50' kind 'FLOW' units 'TAF'} !only 50% available
define S_Oct {value Sac(1-month)}
define S_Nov {value Sac(2-month)}
define S_Dec {value Sac(3-month)}
define S_Jan {case a{condition month==JAN value Sac_Jan( 4-month)}case b{condition always value Sac(4-month)}}
define S_Feb {case a{condition month==JAN value Sac_Jan( 5-month)}case b{condition month==Feb value Sac_Feb( 5-month)}case c{condition always value Sac(5-month)}}
define S_Mar {case a{condition month==JAN value Sac_Jan( 6-month)}case b{condition month==Feb value Sac_Feb( 6-month)}case c{condition month==Mar value Sac_Mar( 6-month)}case d{condition always value Sac(6-month)}}
define S_Apr {case a{condition month==JAN value Sac_Jan( 7-month)}case b{condition month==Feb value Sac_Feb( 7-month)}case c{condition month==Mar value Sac_Mar( 7-month)}case d{condition month==Apr value Sac_Apr( 7-month)}case e{condition always value Sac(7-month)}}
define S_May {case a{condition month==JAN value Sac_Jan( 8-month)}case b{condition month==Feb value Sac_Feb( 8-month)}case c{condition month==Mar value Sac_Mar( 8-month)}case d{condition month==Apr value Sac_Apr( 8-month)}case e{condition month==May value Sac_May( 8-month)}case f{condition always value Sac(8-month)}}
define S_Jun {case a{condition month==JAN value Sac_Jan( 9-month)}case b{condition month==Feb value Sac_Feb( 9-month)}case c{condition month==Mar value Sac_Mar( 9-month)}case d{condition month==Apr value Sac_Apr( 9-month)}case e{condition month==May value Sac_May( 9-month)}case f{condition always value Sac_Jun( 9-month)}}
define S_Jul {case a{condition month==JAN value Sac_Jan(10-month)}case b{condition month==Feb value Sac_Feb(10-month)}case c{condition month==Mar value Sac_Mar(10-month)}case d{condition month==Apr value Sac_Apr(10-month)}case e{condition month==May value Sac_May(10-month)}case f{condition always value Sac_Jun(10-month)}}

define Sac_Oct_Mar {value S_Oct/1000. + S_Nov/1000. + S_Dec/1000. + S_Jan/1000. + S_Feb/1000. + S_Mar/1000.}
define Sac_Apr_Jul {value S_Apr/1000. + S_May/1000. + S_Jun/1000. + S_Jul/1000.}

!unimpaired Whiskeytown inflow:
define Wky {timeseries 'I3' kind 'FLOW-INFLOW' units 'TAF'}
define Wky_Jan {timeseries 'WKY_Jan_90' kind 'FLOW' units 'TAF'}
define Wky_Feb {timeseries 'WKY_Feb_90' kind 'FLOW' units 'TAF'}
define Wky_Mar {timeseries 'WKY_Mar_90' kind 'FLOW' units 'TAF'}
define Wky_Apr {timeseries 'WKY_Apr_90' kind 'FLOW' units 'TAF'}
define Wky_May {timeseries 'WKY_May_50' kind 'FLOW' units 'TAF'} !only 50% available
define Wky_Jun {timeseries 'WKY_Jun_50' kind 'FLOW' units 'TAF'} !only 50% available
define W_Oct {value Wky(1-month)}
define W_Nov {value Wky(2-month)}
define W_Dec {value Wky(3-month)}
define W_Jan {case a{condition month==JAN value Wky_Jan( 4-month)}case b{condition always value Wky(4-month)}}
define W_Feb {case a{condition month==JAN value Wky_Jan( 5-month)}case b{condition month==Feb value Wky_Feb( 5-month)}case c{condition always value Wky(5-month)}}
define W_Mar {case a{condition month==JAN value Wky_Jan( 6-month)}case b{condition month==Feb value Wky_Feb( 6-month)}case c{condition month==Mar value Wky_Mar( 6-month)}case d{condition always value Wky(6-month)}}
define W_Apr {case a{condition month==JAN value Wky_Jan( 7-month)}case b{condition month==Feb value Wky_Feb( 7-month)}case c{condition month==Mar value Wky_Mar( 7-month)}case d{condition month==Apr value Wky_Apr( 7-month)}case e{condition always value Wky(7-month)}}
define W_May {case a{condition month==JAN value Wky_Jan( 8-month)}case b{condition month==Feb value Wky_Feb( 8-month)}case c{condition month==Mar value Wky_Mar( 8-month)}case d{condition month==Apr value Wky_Apr( 8-month)}case e{condition month==May value Wky_May( 8-month)}case f{condition always value Wky(8-month)}}
define W_Jun {case a{condition month==JAN value Wky_Jan( 9-month)}case b{condition month==Feb value Wky_Feb( 9-month)}case c{condition month==Mar value Wky_Mar( 9-month)}case d{condition month==Apr value Wky_Apr( 9-month)}case e{condition month==May value Wky_May( 9-month)}case f{condition always value Wky_Jun( 9-month)}}
define W_Jul {case a{condition month==JAN value Wky_Jan(10-month)}case b{condition month==Feb value Wky_Feb(10-month)}case c{condition month==Mar value Wky_Mar(10-month)}case d{condition month==Apr value Wky_Apr(10-month)}case e{condition month==May value Wky_May(10-month)}case f{condition always value Wky_Jun(10-month)}}

define Wky_Oct_Mar {value W_Oct/1000. + W_Nov/1000. + W_Dec/1000. + W_Jan/1000. + W_Feb/1000. + W_Mar/1000.}
define Wky_Apr_Jul {value W_Apr/1000. + W_May/1000. + W_Jun/1000. + W_Jul/1000.}

!dsa 58 contribution:
define DSA58_Oct_Mar {value 1543./1000.}
define DSA58_Apr_Jul {value  435./1000.}

! previous year's actual sac valley index, maximum of 10 MAF:
define SVI_prv_yr {select sac from CAM_SVI where wy=wateryear}
define SVI_prv    {value min(10.,SVI_prv_yr)}

! current year's forecasted sac valley index:
define SVI_Oct_Mar {value Feath_Oct_Mar + Yuba_Oct_Mar + Amer_Oct_Mar + Sac_Oct_Mar + Wky_Oct_Mar + DSA58_Oct_Mar}
define SVI_Apr_Jul {value Feath_Apr_Jul + Yuba_Apr_Jul + Amer_Apr_Jul + Sac_Apr_Jul + Wky_Apr_Jul + DSA58_Apr_Jul}
define SVI {value 0.4*SVI_Apr_Jul + 0.3*SVI_Oct_Mar + 0.3*SVI_prv}
define SVIfrcst {alias SVI kind 'INDEX' units 'MAF'}


!define SVI {select SVI from DCO_SVI where month=month,exc=exc}
!define SVIfrcst {alias SVI kind 'INDEX' units 'MAF'}

! forecasted water year type :
define WYT {
  case critical{
    condition SVI<=5.4
    value 5}
  case dry{
    condition SVI<=6.5
    value 4}
  case belownormal{
    condition SVI<=7.8
    value 3}
  case abovenormal{
    condition SVI<=9.2
    value 2}
  case wet{
    condition always
    value 1}
}
define WYTfrcst {alias WYT kind 'INDEX' units 'none'}

!************************************************************************************************

! Eight River Index

! Sum of Sacramento River unimpaired flows:
!   - Sacramento River flow at Bend Bridge, near Red Bluff; 
!   - Feather River, total inflow to Oroville Reservoir; 
!   - Yuba River flow at Smartville; 
!   - American River, total inflow to Folsom Reservoir; 
! and sum of San Joaguin River unimpaired flows:
!   - Stanislaus River, total inflow to New Melones Reservoir; 
!   - Tuolumne River, total inflow to Don Pedro Reservoir; 
!   - Merced River, total inflow to Exchequer Reservoir; 
!   - San Joaquin River, total inflow to Millerton Lake.

define I33B_Jan {case a{condition month>=JAN .and. month<=MAY select per90 from CAM_SJRES where month= 4,LOC=1}case b{condition always select per90 from CAM_SJRES where month= 4,LOC=1}}
define I33B_Feb {case a{condition month>=JAN .and. month<=MAY select per90 from CAM_SJRES where month= 5,LOC=1}case b{condition always select per90 from CAM_SJRES where month= 5,LOC=1}}
define I33B_Mar {case a{condition month>=JAN .and. month<=MAY select per90 from CAM_SJRES where month= 6,LOC=1}case b{condition always select per90 from CAM_SJRES where month= 6,LOC=1}}
define I33B_Apr {case a{condition month>=JAN .and. month<=MAY select per90 from CAM_SJRES where month= 7,LOC=1}case b{condition always select per90 from CAM_SJRES where month= 7,LOC=1}}
define I33B_May {case a{condition month>=JAN .and. month<=MAY select per90 from CAM_SJRES where month= 8,LOC=1}case b{condition always select per90 from CAM_SJRES where month= 8,LOC=1}}
define I33B_Jun {case a{condition month>=JAN .and. month<=MAY select per90 from CAM_SJRES where month= 9,LOC=1}case b{condition always select per90 from CAM_SJRES where month= 9,LOC=1}}

define RI_Jan {value F_Jan + Y_Jan + Am_Jan + S_Jan + I33B_Jan}
define RI_Feb {value F_Feb + Y_Feb + Am_Feb + S_Feb + I33B_Feb}
define RI_Mar {value F_Mar + Y_Mar + Am_Mar + S_Mar + I33B_Mar}
define RI_Apr {value F_Apr + Y_Apr + Am_Apr + S_Apr + I33B_Apr}
define RI_May {value F_May + Y_May + Am_May + S_May + I33B_May}
define RI_Jun {value F_Jun + Y_Jun + Am_Jun + S_Jun + I33B_Jun}
