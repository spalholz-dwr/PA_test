! DCC_wRVcontrol.wresl

! Under drier conditions when Rio Vista flow is controlling storage release,
! CVP would likely close the DXC gates to the extent possible while still meeting
! RS salinity so as not to unduly pull water from storage.

! check Rock Slough salinity conditions if the DXC was closed the entire month
! and exports were reduced by the flow through the gates in the previous cycle 
! (rough estimate of how much they'd be reduced if the gates were closed)
define RS_estEC_zeroDXC {
    value AnnEC(C_SAC041(-4),C_SAC041(-3),C_SAC041(-2),C_SAC041(-1),C_SAC041[GW_FOURTH],
           EXP_TD(-4),EXP_TD(-3),EXP_TD(-2),EXP_TD(-1),EXP_TD[GW_FOURTH]-D_SAC030_MOK014[GW_FOURTH],
           C_SJR070(-4),C_SJR070(-3),C_SJR070(-2),C_SJR070(-1),C_SJR070[GW_FOURTH],
           DXC(-4),DXC(-3),DXC(-2),DXC(-1),0,
           net_DICU(-4),net_DICU(-3),net_DICU(-2),net_DICU(-1),net_DICU[GW_FOURTH],
           sac_oth(-4),sac_oth(-3),sac_oth(-2),sac_oth(-1),sac_oth[GW_FOURTH],
           exp_oth(-4),exp_oth(-3),exp_oth(-2),exp_oth(-1),exp_oth[GW_FOURTH],
           SMSCG_OP(-4),SMSCG_OP(-3),SMSCG_OP(-2),SMSCG_OP(-1),SMSCG_OP[GW_FOURTH],
           int(daysindv(-4)),int(daysindv(-3)),int(daysindv(-2)),int(daysindv(-1)),daysin,
           int(2),int(monthly_ave),month,wateryear)}  ! 2 is for RS

! now check Rock Slough salinity conditions if the DXC was closed half the month
! and exports were reduced by half the flow through the gates in the previous cycle 
! (rough estimate of how much they'd be reduced if the gates were closed for half the month)
define RS_estEC_halfDXC {
    value AnnEC(C_SAC041(-4),C_SAC041(-3),C_SAC041(-2),C_SAC041(-1),C_SAC041[GW_FOURTH],
           EXP_TD(-4),EXP_TD(-3),EXP_TD(-2),EXP_TD(-1),EXP_TD[GW_FOURTH]-.5*D_SAC030_MOK014[GW_FOURTH],
           C_SJR070(-4),C_SJR070(-3),C_SJR070(-2),C_SJR070(-1),C_SJR070[GW_FOURTH],
           DXC(-4),DXC(-3),DXC(-2),DXC(-1),daysin/2,
           net_DICU(-4),net_DICU(-3),net_DICU(-2),net_DICU(-1),net_DICU[GW_FOURTH],
           sac_oth(-4),sac_oth(-3),sac_oth(-2),sac_oth(-1),sac_oth[GW_FOURTH],
           exp_oth(-4),exp_oth(-3),exp_oth(-2),exp_oth(-1),exp_oth[GW_FOURTH],
           SMSCG_OP(-4),SMSCG_OP(-3),SMSCG_OP(-2),SMSCG_OP(-1),SMSCG_OP[GW_FOURTH],
           int(daysindv(-4)),int(daysindv(-3)),int(daysindv(-2)),int(daysindv(-1)),daysin,
           int(2),int(monthly_ave),month,wateryear)}  ! 2 is for RS

! This is CCWD's first approximation (Matt Moses, July 2006)
! Use Maximum of the following two equations:
!   Cl = 0.285*EC - 50    (this is the 'seawater' line)
!   Cl = 0.15*EC - 12      (this is the 'ag. drainage' line)
! These two equations intercept at Cl=30.222... and EC=281.481481481...
define RS_estCL_zeroDXC {value max(0.285*RS_estEC_zeroDXC - 50.,
                                   0.150*RS_estEC_zeroDXC - 12.)}
define RS_estCL_zeroDXCdv {alias RS_estCL_zeroDXC kind 'SALINITY' units 'MG/L'}
define RS_estCL_halfDXC {value max(0.285*RS_estEC_halfDXC - 50.,
                                   0.150*RS_estEC_halfDXC - 12.)}
define RS_estCL_halfDXCdv {alias RS_estCL_halfDXC kind 'SALINITY' units 'MG/L'}


! Determine final number of days in each month that the DXC gate is open when Rio Vista is controlling
! If projects are upstream controlled, then don't change the gates (this may be an option for refinement
! maybe also base this on how much water is being "wasted" into the gates

define SacGW4ctrl {
    case UpstreamControl {
        condition C_SAC120_ADD[GW_FOURTH]<.1 .or. C_KSWCK_ADD[GW_FOURTH]<.1 
        value 1.}
    case otherwise {
    	condition always
    	value 0.}
}
define AmrGW4ctrl {
    case UpstreamControl {
        condition C_NTOMA_ADD[GW_FOURTH]<.1 .or. C_AMR004[GW_FOURTH]<.1 
        value 1.}
    case otherwise {
    	condition always
    	value 0.}
}
define FtrGW4ctrl {
    case UpstreamControl {
        condition C_FTR059_ADD[GW_FOURTH]<.1 .or. C_FTR039_ADD[GW_FOURTH]<.1 .or. C_FTR003_ADD[GW_FOURTH]<.1
        value 1.}
    case otherwise {
    	condition always
    	value 0.}
}
define RV_days_open {
    case UpstreamControl {
        condition SacGW4ctrl + AmrGW4ctrl + FtrGW4ctrl > .5
        value daysin}
    case RVcontrol_zero { ! RS is still met even if gates are closed every day
        condition C_SAC017_ADD[GW_FOURTH]<0.1 .and. RS_estCL_zeroDXC <= RS_CL_STD_TEST - 5.
        value 0. }
    case RVcontrol_half { ! RS is met when gates are closed for half the days
        condition C_SAC017_ADD[GW_FOURTH]<0.1 .and. RS_estCL_halfDXC <= RS_CL_STD_TEST - 5.
        value 15. }
    case otherwise {
        condition always                                      
        value daysin }
}
define RVdaysopendv  {alias RV_days_open kind 'DCC-DAYS-OPEN' UNITS 'NONE'}  !for output only

! The idea of closing the gates is to relieve Shasta releases.  In some cases, penalties on
! the NO_EI_SPLIT goals in COA, CVPrulecv, res balancing, etc... can make the model want to
! keep releasing that water.  The penalty in the limitRVexc goal has been developed accordingly.
! This goal only has an effect in the specific cases when RV was controlling and we close
! the gates to save water.
goal limitRVexc {
    lhs C_SAC017_ADD
    case DryCtrl{
        condition C_SAC017_ADD[GW_FOURTH]<0.1 .and. RV_days_open<daysin
        rhs 0.
        lhs>rhs penalty 3000}
}

define RV_DXC_cutDV {std kind 'output-cfs' units 'cfs'}
goal setRV_DXC_cutDV {
    lhs RV_DXC_cutDV
    case RV_DXC_cut {
        condition RV_days_open < daysin
        rhs D_SAC030_MOK014[GW_FOURTH] - D_SAC030_MOK014 }
    case otherwise {
        condition always
        rhs 0.}
}

