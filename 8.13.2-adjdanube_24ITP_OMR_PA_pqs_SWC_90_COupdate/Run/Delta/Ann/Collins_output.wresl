! R.Wilbur & S. Wu 5/10/05

!****************************************************************************************

! maximum export given the sacramento river flow

define CO_MaxExport {lower unbounded upper unbounded kind 'FLOW' units 'CFS'}
goal setCOMax {
  lhs CO_MaxExport
  case NoSalinityControlPossible{
    condition abs(CO_m_sv) <= 0.001 .and. int(CO_b_sv) == 0
    rhs ExportCap}
  case NegSlope {
    condition CO_m_sv <= 0.0
    rhs 999999.}
  /*case HighCost{
    condition CO_Sac_ZeroExp_sv2 >= ANNcap
    rhs ExportCap}*/
  case NegCarriage{
    condition CO_m_sv >= 1.0
    rhs 999999.}
  case Normal {
    condition always
    rhs CO_m_sv*C_SACtot_ANN + CO_b_sv}
}

!****************************************************************************************

! required delta outflow given exports

define CO_MRDO {lower unbounded upper unbounded kind 'FLOW' units 'CFS'}
goal setCOmrdo {
  lhs CO_MRDO
  case NoSalinityControlPossible{
    condition abs(CO_m_sv) <= 0.001 .and. int(CO_b_sv) == 0
    rhs 0.}
  case NegSlope {
    condition CO_m_sv <= 0.0
    rhs 0.}
  /*case HighCost{
    condition CO_Sac_ZeroExp_sv2 >= ANNcap
    rhs 0.}*/
  case NegCarriage{
    condition CO_m_sv >= 1.0
    rhs 0.}
  case Normal {
    condition always
    rhs ((1-CO_m_sv)/CO_m_sv)*ExportActualTD /*- ((1-CO_m_sv)/CO_m_sv)*C_CAA003_wts_stg1 - ((1-CO_m_sv)/CO_m_sv)*C_CAA003_cvcrels
    - ((1-CO_m_sv)/CO_m_sv)*C_CAA003_whlrels */ - CO_b_sv/CO_m_sv + DeltaInflowforNDOI - C_SACTOT_ANN - DeltaExportforNDOI + C_CAA003_TD + C_DMC000_TD
						   + DeltaAccretionforNDOI - DeltaDepletionforNDOI} 
 }						  

!****************************************************************************************

! required sac flow given exports

define CO_ReqSac {lower unbounded upper unbounded kind 'FLOW' units 'cfs'}
goal set_CO_ReqSac {
  lhs CO_ReqSac
  case NoSalinityControlPossible{
    condition abs(CO_m_sv) <= 0.001 .and. int(CO_b_sv) == 0
    rhs 0.}
  case NegSlope {
    condition CO_m_sv <= 0.0
    rhs 0.}
  /*case HighCost{
    condition CO_Sac_ZeroExp_sv2 >= ANNcap
    rhs 0.}*/
  case NegCarriage{
    condition abs(CO_m_sv) >= 1.0
    rhs 0.}
  case Normal {
    condition always
    rhs ExportActualTD/CO_m_sv - CO_b_sv/CO_m_sv}
}
