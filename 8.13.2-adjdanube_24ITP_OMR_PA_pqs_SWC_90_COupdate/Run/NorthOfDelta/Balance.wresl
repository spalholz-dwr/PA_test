/*
Logic to balance Trinity, Shasta, and Folsom Reservoirs
*/
define volS_TRNTYZone2 {value S_TRNTYlevel2-S_TRNTYlevel1 }
define volS_SHSTAZone2 {value S_SHSTAlevel2-S_SHSTAlevel1 }
define volS_FOLSMZone2 {value S_FOLSMlevel2-S_FOLSMlevel1 }

define S_TRNTY_2_coeff {
  case Greater {
    condition volS_TRNTYZone2 >= 0.001 .and. volS_TRNTYZone2 >= volS_SHSTAZone2
    value   volS_SHSTAZone2/volS_TRNTYZone2
  }
  case Less {
    condition volS_TRNTYZone2 < volS_SHSTAZone2
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

define S_TRNTY_2_4coeff {
  case Greater {
    condition volS_SHSTAZone2 >= 0.001 .and. volS_SHSTAZone2 >= volS_TRNTYZone2
    value   volS_TRNTYZone2/volS_SHSTAZone2
  }
  case Less {
    condition volS_SHSTAZone2 < volS_TRNTYZone2
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

goal balS_TRNTYS_SHSTAZone2 {
  lhs S_TRNTY_2_coeff*S_TRNTY_2
  rhs S_TRNTY_2_4coeff*S_SHSTA_2
  lhs>rhs penalty 2*taf_cfs
  lhs<rhs penalty 2*taf_cfs
}

define S_FOLSM_2_coeff {
  case Greater {
    condition volS_FOLSMZone2 >= 0.001 .and. volS_FOLSMZone2 >= volS_SHSTAZone2
    value   volS_SHSTAZone2/volS_FOLSMZone2
  }
  case Less {
    condition volS_FOLSMZone2 < volS_SHSTAZone2
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

define S_FOLSM_2_4coeff {
  case Greater {
    condition volS_SHSTAZone2 >= 0.001 .and. volS_SHSTAZone2 >= volS_FOLSMZone2
    value   volS_FOLSMZone2/volS_SHSTAZone2
  }
  case Less {
    condition volS_SHSTAZone2 < volS_FOLSMZone2
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

goal balS_FOLSMS_SHSTAZone2 {
  lhs S_FOLSM_2_coeff*S_FOLSM_2
  rhs S_FOLSM_2_4coeff*S_SHSTA_2
  lhs>rhs penalty 2*taf_cfs
  lhs<rhs penalty 2*taf_cfs
}

define volS_TRNTYZone3 {value S_TRNTYlevel3adj-S_TRNTYlevel2 }
define volS_SHSTAZone3 {value S_SHSTAlevel3adj-S_SHSTAlevel2 }
define volS_FOLSMZone3 {value S_FOLSMlevel3adj-S_FOLSMlevel2 }

define S_TRNTY_3_coeff {
  case Greater {
    condition volS_TRNTYZone3 >= 0.001 .and. volS_TRNTYZone3 >= volS_SHSTAZone3
    value   volS_SHSTAZone3/volS_TRNTYZone3
  }
  case Less {
    condition volS_TRNTYZone3 < volS_SHSTAZone3
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

define S_TRNTY_3_4coeff {
  case Greater {
    condition volS_SHSTAZone3 >= 0.001 .and. volS_SHSTAZone3 >= volS_TRNTYZone3
    value   volS_TRNTYZone3/volS_SHSTAZone3
  }
  case Less {
    condition volS_SHSTAZone3 < volS_TRNTYZone3
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

goal balS_TRNTYS_SHSTAZone3 {
  lhs S_TRNTY_3_coeff*S_TRNTY_3
  rhs S_TRNTY_3_4coeff*S_SHSTA_3
  lhs>rhs penalty 2*taf_cfs
  lhs<rhs penalty 2*taf_cfs
}

define S_FOLSM_3_coeff {
  case Greater {
    condition volS_FOLSMZone3 >= 0.001 .and. volS_FOLSMZone3 >= volS_SHSTAZone3
    value   volS_SHSTAZone3/volS_FOLSMZone3
  }
  case Less {
    condition volS_FOLSMZone3 < volS_SHSTAZone3
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

define S_FOLSM_3_4coeff {
  case Greater {
    condition volS_SHSTAZone3 >= 0.001 .and. volS_SHSTAZone3 >= volS_FOLSMZone3
    value   volS_FOLSMZone3/volS_SHSTAZone3
  }
  case Less {
    condition volS_SHSTAZone3 < volS_FOLSMZone3
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}



goal balS_FOLSMS_SHSTAZone3 {
  lhs S_FOLSM_3_coeff*S_FOLSM_3
  rhs S_FOLSM_3_4coeff*S_SHSTA_3
  lhs>rhs penalty 2*taf_cfs
  lhs<rhs penalty 2*taf_cfs
}

define volS_TRNTYZone4 {value S_TRNTYlevel4-S_TRNTYlevel3adj }
define volS_SHSTAZone4 {value S_SHSTAlevel4-S_SHSTAlevel3adj }
define volS_FOLSMZone4 {value S_FOLSMlevel4-S_FOLSMlevel3adj }

define S_TRNTY_4_coeff {
  case Greater {
    condition volS_TRNTYZone4 >= 0.001 .and. volS_TRNTYZone4 >= volS_SHSTAZone4
    value   volS_SHSTAZone4/volS_TRNTYZone4
  }
  case Less {
    condition volS_TRNTYZone4 < volS_SHSTAZone4
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

define S_TRNTY_4_4coeff {
  case Greater {
    condition volS_SHSTAZone4 >= 0.001 .and. volS_SHSTAZone4 >= volS_TRNTYZone4
    value   volS_TRNTYZone4/volS_SHSTAZone4
  }
  case Less {
    condition volS_SHSTAZone4 < volS_TRNTYZone4
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

goal balS_TRNTYS_SHSTAZone4 {
  lhs S_TRNTY_4_coeff*S_TRNTY_4
  rhs S_TRNTY_4_4coeff*S_SHSTA_4
  lhs>rhs penalty 2*taf_cfs
  lhs<rhs penalty 2*taf_cfs
}

define S_FOLSM_4_coeff {
  case Greater {
    condition volS_FOLSMZone4 >= 0.001 .and. volS_FOLSMZone4 >= volS_SHSTAZone4
    value   volS_SHSTAZone4/volS_FOLSMZone4
  }
  case Less {
    condition volS_FOLSMZone4 < volS_SHSTAZone4
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

define S_FOLSM_4_4coeff {
  case Greater {
    condition volS_SHSTAZone4 >= 0.001 .and. volS_SHSTAZone4 >= volS_FOLSMZone4
    value   volS_FOLSMZone4/volS_SHSTAZone4
  }
  case Less {
    condition volS_SHSTAZone4 < volS_FOLSMZone4
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

goal balS_FOLSMS_SHSTAZone4 {
  lhs S_FOLSM_4_coeff*S_FOLSM_4
  rhs S_FOLSM_4_4coeff*S_SHSTA_4
  lhs>rhs penalty 2*taf_cfs
  lhs<rhs penalty 2*taf_cfs
}

define volS_SHSTAZone5 {value S_SHSTAlevel5 - S_SHSTAlevel4}
! In September, Folsom FC rule is 760, but level used for computing
! reservoir balancing should be 650.  This will create a smaller layer5
! in Folsom, which will result in higher flows at Nimbus while allowing
! additional storage to be retained in the conditions when flood rules do control.
define S_FOLSMlevel5bal {
    case september {
        condition month==SEP
        value 650.}
    case otherwise {
        condition always
        value S_FOLSMlevel5 }
}
define volS_FOLSMZone5 {value S_FOLSMlevel5bal - S_FOLSMlevel4}

define S_FOLSM_5_coeff {
  case Greater {
    condition volS_FOLSMZone5 >= 0.001 .and. volS_FOLSMZone5 >= volS_SHSTAZone5
    value   volS_SHSTAZone5/volS_FOLSMZone5
  }
  case Less {
    condition volS_FOLSMZone5 < volS_SHSTAZone5
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}

define S_FOLSM_5_4coeff {
  case Greater {
    condition volS_SHSTAZone5 >= 0.001 .and. volS_SHSTAZone5 >= volS_FOLSMZone5
    value   volS_FOLSMZone5/volS_SHSTAZone5
  }
  case Less {
    condition volS_SHSTAZone5 < volS_FOLSMZone5
    value   1.
  }
  case otherwise {
    condition always
    value   0.
  }
}


goal balS_FOLSMS_SHSTAZone5 {
  lhs S_FOLSM_5_coeff*S_FOLSM_5
  rhs S_FOLSM_5_4coeff*S_SHSTA_5
  lhs>rhs penalty 2*taf_cfs
  lhs<rhs penalty 2*taf_cfs
}

