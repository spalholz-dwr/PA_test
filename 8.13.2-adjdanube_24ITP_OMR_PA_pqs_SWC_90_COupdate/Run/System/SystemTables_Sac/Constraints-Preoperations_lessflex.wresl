/*
Constraints-preoperations.wresl
CalSim 3.0 System File

Purpose:

Naming takes the following form:

*/
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! UPPER FEATHER MODULE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
define C_FTR074_SV2                          {case WatershedsOn {condition simulateUpperFeather >= 0.5 value C_FTR074[UPPERFEATHER]}
                                              case Otherwise    {condition always value C_FTR074_SV}}
                                                                                                        
goal set_C_FTR074 {lhs C_FTR074               case WatershedsOn {condition simulateUpperFeather >= 0.5 rhs C_FTR074[UPPERFEATHER]}
                                              case Otherwise    {condition always                      rhs C_FTR074_SV}}

goal set_C_TTC002 {lhs C_TTC002               case WatershedsOn {condition simulateUpperFeather >= 0.5 rhs C_TTC002[UPPERFEATHER] *simulateUpperFeather}
                                              case Otherwise    {condition always                      rhs C_TTC002_SV}}

goal set_D_MIO023_10_NA {lhs D_MIO023_10_NA   case WatershedsOn {condition simulateUpperFeather >= 0.5 rhs D_MIO023_10_NA[UPPERFEATHER]}
                                              case Otherwise    {condition always                      rhs max(0, D_MIO023_10_NA_SV-0.001)}}

goal set_D_MIO023_12_NU1 {lhs D_MIO023_12_NU1 case WatershedsOn {condition simulateUpperFeather >= 0.5 rhs D_MIO023_12_NU1[UPPERFEATHER]}
                                              case Otherwise    {condition always                      rhs max(0, D_MIO023_12_NU1_SV-0.001)}}

goal set_D_WTPMNR_13_NU1 {lhs D_WTPMNR_13_NU1 case WatershedsOn {condition simulateUpperFeather >= 0.5 rhs D_WTPMNR_13_NU1[UPPERFEATHER]}
                                              case Otherwise    {condition always                      rhs max(0, D_WTPMNR_13_NU1_SV-0.001)}}

goal set_D_MNRRH_13_NU2 {lhs D_MNRRH_13_NU2   case WatershedsOn {condition simulateUpperFeather >= 0.5 rhs D_MNRRH_13_NU2[UPPERFEATHER]}
                                              case Otherwise    {condition always                      rhs max(0, D_MNRRH_13_NU2_SV-0.001)}}

goal set_D_MNRRH_13_NA {lhs D_MNRRH_13_NA     case WatershedsOn {condition simulateUpperFeather >= 0.5 rhs D_MNRRH_13_NA[UPPERFEATHER]}
                                              case Otherwise    {condition always                      rhs max(0, D_MNRRH_13_NA_SV-0.001)}}

goal set_D_OWC000_13_NA {lhs D_OWC000_13_NA   case WatershedsOn {condition simulateUpperFeather >= 0.5 rhs D_OWC000_13_NA[UPPERFEATHER]}
                                              case Otherwise    {condition always                      rhs max(0, D_OWC000_13_NA_SV-0.001)}}

goal set_C_KRT000 {lhs C_KRT000               case WatershedsOn {condition simulateUpperFeather >= 0.5 rhs C_KRT000[UPPERFEATHER]}
                                              case Otherwise    {condition always                      rhs C_KRT000_SV}}

goal set_D_SLT009_SCT000 {lhs D_SLT009_SCT000 case WatershedsOn {condition simulateUpperFeather >= 0.5 rhs D_SLT009_SCT000[UPPERFEATHER]}
                                              case Otherwise    {condition always                      rhs D_SLT009_SCT000_SV}}


                                

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! UPPER AMERICAN MODULE     !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
define C_NFA016_sv2 {case WatershedsOn {condition simulateUpperAmerican >= 0.5 value C_NFA016[UPPERAMERICAN]}
                     case Otherwise    {condition always                       value C_NFA016_SV}}
                            
define C_SFA011_sv2 {case WatershedsOn {condition simulateUpperAmerican >= 0.5 value C_SFA011[UPPERAMERICAN]}
                     case Otherwise    {condition always                       value C_SFA011_SV}}


goal set_NFA016 {lhs C_NFA016 case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs C_NFA016[UPPERAMERICAN]}
                              case Otherwise    {condition always                       rhs C_NFA016_SV}}
                            
goal set_SFA011 {lhs C_SFA011 case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs C_SFA011[UPPERAMERICAN]}
                              case Otherwise    {condition always                       rhs C_SFA011_SV}}
                              
define FolsomInflowExcARPS_sv {case WatershedsOn {condition simulateUpperAmerican >= 0.5 value C_NFA016[UPPERAMERICAN]}
                               case Otherwise    {condition always                       value C_NFA016_SV}}                             
                              
                                                       
goal set_D_WTPRSA_ELDID_NU3 {lhs D_WTPRSA_ELDID_NU3 case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs D_WTPRSA_ELDID_NU3[UPPERAMERICAN]}
                                                    case Otherwise    {condition always                       rhs max(0, D_WTPRSA_ELDID_NU3_SV-0.001)}}
                            
goal set_D_WTPRS1_ELDID_NU3 {lhs D_WTPRS1_ELDID_NU3 case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs D_WTPRS1_ELDID_NU3[UPPERAMERICAN]}
                                                    case Otherwise    {condition always                       rhs max(0, D_WTPRS1_ELDID_NU3_SV-0.001)}}


goal set_D_FOLSM_EDCOCA     {lhs D_FOLSM_EDCOCA     case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs D_FOLSM_EDCOCA[UPPERAMERICAN]}
                                                    case Otherwise    {condition always                       rhs D_FOLSM_EDCOCA_SV}}
                                                    
define d_folsm_edcoca_cvp {std kind 'FLOW-DIVERSION' units 'CFS'}  

goal set_D_FOLSM_EDCOCA_CVP {lhs D_FOLSM_EDCOCA_CVP case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs D_FOLSM_EDCOCA_CVP[UPPERAMERICAN]}
                                                    case Otherwise    {condition always                       rhs D_FOLSM_EDCOCA_CVP_SV}}                                                                                          
                                                    
goal set_D_FOLSM_WTPEDH_WR {lhs D_FOLSM_WTPEDH_WR   case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs D_FOLSM_WTPEDH_WR[UPPERAMERICAN]}
                                                    case Otherwise    {condition always                       rhs D_FOLSM_WTPEDH_WR_SV}}                                                    

goal set_D_FOLSM_EDCOCA_NU1 {lhs D_FOLSM_EDCOCA_NU1 case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs D_FOLSM_EDCOCA_NU1[UPPERAMERICAN]}
                                                    case Otherwise    {condition always                       rhs D_FOLSM_EDCOCA_NU1_SV}}
                            
goal set_D_FOLSM_EDCOCA_NU2 {lhs D_FOLSM_EDCOCA_NU2 case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs D_FOLSM_EDCOCA_NU2[UPPERAMERICAN]}
                                                    case Otherwise    {condition always                       rhs D_FOLSM_EDCOCA_NU2_SV}}                           

goal set_D_FOLSM_EDCOCA_NA1 {lhs D_FOLSM_EDCOCA_NA1 case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs D_FOLSM_EDCOCA_NA1[UPPERAMERICAN]}
                                                    case Otherwise    {condition always                       rhs D_FOLSM_EDCOCA_NA1_SV}}

goal set_D_FOLSM_EDCOCA_NA2 {lhs D_FOLSM_EDCOCA_NA2 case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs D_FOLSM_EDCOCA_NA2[UPPERAMERICAN]}
                                                    case Otherwise    {condition always                       rhs D_FOLSM_EDCOCA_NA2_SV}}


define S_FRMDW_           { case WatershedsOn {condition simulateUpperAmerican >= 0.5 value S_FRMDW[UPPERAMERICAN]}
                            case Otherwise    {condition always                       value S_FRMDW_SV}}
                            
define S_HHOLE_           { case WatershedsOn {condition simulateUpperAmerican >= 0.5 value S_HHOLE[UPPERAMERICAN]}
                            case Otherwise    {condition always                       value S_HHOLE_SV}}
                            
define S_UNVLY_           { case WatershedsOn {condition simulateUpperAmerican >= 0.5 value S_UNVLY[UPPERAMERICAN]}
                            case Otherwise    {condition always                       value S_UNVLY_SV}}
                            
                         

goal setS_FRMDW {lhs S_FRMDW case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs S_FRMDW[UPPERAMERICAN]}
                             case Otherwise    {condition always                       rhs S_FRMDW_SV}}
                            
goal setS_HHOLE {lhs S_HHOLE case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs S_HHOLE[UPPERAMERICAN]}
                             case Otherwise    {condition always                       rhs S_HHOLE_SV}}
                            
goal setS_LOONL {lhs S_LOONL case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs S_LOONL[UPPERAMERICAN]}
                             case Otherwise    {condition always                       rhs S_LOONL_SV}}
                            
goal setS_UNVLY {lhs S_UNVLY case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs S_UNVLY[UPPERAMERICAN]}
                             case Otherwise    {condition always                       rhs S_UNVLY_SV}}
                            
goal setS_ICEHS {lhs S_ICEHS case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs S_ICEHS[UPPERAMERICAN]}
                             case Otherwise    {condition always                       rhs S_ICEHS_SV}}
                                              
                            
define FolsomInflowEst {case WatershedsOn {condition simulateUpperAmerican >= 0.5 value FolsomInflowEst_DV[UPPERAMERICAN]}
                        case Otherwise    {condition always                       value FolsomInflowEst_SV}}
                        
define FolsomInflowEstSum {case WatershedsOn {condition simulateUpperAmerican >= 0.5 value FolsomInflowEstSum_DV[UPPERAMERICAN]}
                           case Otherwise    {condition always                       value FolsomInflowEstSum_SV}}                          

goal setR_GDPUD_NA_NFA011 {lhs R_GDPUD_NA_NFA011 case WatershedsOn {condition simulateUpperAmerican >= 0.5 rhs R_GDPUD_NA_NFA011[UPPERAMERICAN]}
                             case Otherwise    {condition always                       rhs R_GDPUD_NA_NFA011_SV}}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! UPPER BEAR MODULE      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                                                                                                                                                                                                                     
!define C_BRR050              {case WatershedsOn {condition simulateUpperYubaBear >= 0.5 value C_BRR050[YUBABEAR]}
!                              case Otherwise    {condition always                       value C_BRR050_SV}}
                              
define D_BRR050_BEC000       {case WatershedsOn {condition simulateUpperYubaBear >= 0.5 value D_BRR050_BEC000[YUBABEAR]}
                              case Otherwise    {condition always                       value D_BRR050_BEC000_SV}}                         

define D_BRR050_BEC000_PGE   {case WatershedsOn {condition simulateUpperYubaBear >= 0.5 value D_BRR050_BEC000_PGE[YUBABEAR]}
                              case Otherwise    {condition always                       value min(D_BRR050_BEC000_PGE_SV,D_BRR050_BEC000_SV)}} !Rounding can cause errors
                              
define C_LBC010              {case WatershedsOn {condition simulateUpperYubaBear >= 0.5 value C_LBC010[YUBABEAR]}
                              case Otherwise    {condition always                       value C_LBC010_SV}}

define D_NFA016_ABT002       {case WatershedsOn {condition simulateUpperYubaBear >= 0.5 value D_NFA016_ABT002[YUBABEAR]}
                              case Otherwise    {condition always                       value D_NFA016_ABT002_SV}}
                              
goal set_C_WLF013            {lhs C_WLF013 case WatershedsOn {condition simulateUpperYubaBear >= 0.5 rhs C_WLF013[YUBABEAR]}
                                           case Otherwise    {condition always                      rhs C_WLF013_SV}}                               
                              
                            
define Usage_Reduction_NID   {case WatershedsOn {condition simulateUpperYubaBear >= 0.5 value Usage_Reduction_NID[YUBABEAR]}
                              case Otherwise    {condition always                       value Usage_Reduction_NID_SV}}

define WaterYearConditions_NID_PGE	{case WatershedsOn {condition simulateUpperYubaBear >= 0.5 value WaterYearConditions_NID_PGE[YUBABEAR]}
                              case Otherwise    {condition always                       value WaterYearConditions_NID_PGE_SV}}

define PGE_WY_Allocation     {case WatershedsOn {condition simulateUpperYubaBear >= 0.5 value PGE_WY_Allocation[YUBABEAR]}
                              case Otherwise    {condition always                       value PGE_WY_Allocation_SV}}                           

define Spaulding_Accumulated_Inflow	{case WatershedsOn {condition simulateUpperYubaBear >= 0.5 value Spaulding_Accumulated_Inflow[YUBABEAR]}
                              case Otherwise    {condition always                       value SPAULDING_ACCUMULATED_INFLOW_SV}}

!goal set_S_CMBIE            {lhs S_CMBIE case WatershedsOn {condition simulateUpperYubaBear >= 0.5 rhs S_CMBIE[YUBABEAR]}
!                                           case Otherwise    {condition always                      rhs S_CMBIE_SV}}   
                             
goal set_C_CMBIE            {lhs C_CMBIE case WatershedsOn {condition simulateUpperYubaBear >= 0.5 rhs C_CMBIE[YUBABEAR]}
                                           case Otherwise    {condition always                     rhs C_CMBIE_SV}}   

goal set_C_CBC000            {lhs C_CBC000 case WatershedsOn {condition simulateUpperYubaBear >= 0.5 rhs max(0, C_CBC000[YUBABEAR]-0.001)}
                                           case Otherwise    {condition always  rhs max(0, C_CBC000_SV-0.001)}}   

                                              
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! LOWER YUBA MODULE      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
goal setC_YUB022          {lhs C_YUB022 case WatershedsOn {condition simulateLowerYuba >= 0.5 rhs C_YUB022[LOWERYUBA]}
                                        case Otherwise    {condition always                   rhs C_YUB022_SV}}
                                           
define MF_YUB006 	      {case WatershedsOn {condition simulateLowerYuba >= 0.5 value MF_YUB006[LOWERYUBA]}
                           case Otherwise    {condition always                   value MF_YUB006_SV}}
                                           
goal setYCWA_Alloc        {lhs YCWA_Alloc case WatershedsOn {condition simulateLowerYuba >= 0.5 rhs YCWA_ALLOC[LOWERYUBA]}
                                          case Otherwise    {condition always                   rhs YCWA_ALLOC_SV}}                                           

goal setS_MERLC          {lhs S_MERLC case WatershedsOn {condition simulateLowerYuba >= 0.5 rhs S_MERLC[LOWERYUBA]}
                                        case Otherwise    {condition always                   rhs S_MERLC_SV}}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! East Park Reservoir     !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
goal set_D_EPARK_SCKWD  {D_EPARK_SCKWD < D_EPARK_SCKWD_SV}