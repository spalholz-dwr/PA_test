/*
Summary
-------
The purpose of this module is to calculate the salinity concentration in the
Upper San Joaquin River, from Friant Dam (C_SJR265) to Stevinson (C_SJR123),
via a mass balance approach. Electrical Conductivity (EC) is a measurement of
water volume's salinity concentration.

Acronyms
--------
EC          Electrical Conductivity
SJR         San Joaquin River

*/
! Calculate EC at SJR Mile 265.
define EC_SJR265 {
    case NearZero {
        condition (  C_MLRTN[SJR_PULSE]
                   + I_SJR265 ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_MLRTN   * C_MLRTN[SJR_PULSE]
               + EC_ISJR265 * I_SJR265 )
              / (  C_MLRTN[SJR_PULSE]
                 + I_SJR265 ) }
}
! Calculate EC at SJR Mile 263.
define EC_SJR263 {
    case NearZero {
        condition (  C_SJR265[SJR_PULSE]
                   + SG54_SJR263_7[SJR_PULSE] ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_SJR265       * C_SJR265[SJR_PULSE]
               + EC_SJR265       * min(SG54_SJR263_7[SJR_PULSE], 0.)
               + EC_SG_UpperSJR  * max(SG54_SJR263_7[SJR_PULSE], 0.) )
              / (  C_SJR265[SJR_PULSE]
                 + SG54_SJR263_7[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 258.
define EC_SJR258 {
    case NearZero {
        condition (  C_SJR263[SJR_PULSE]
                   + I_SJR258 ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_SJR263  * C_SJR263[SJR_PULSE]
               + EC_ISJR258 * I_SJR258 )
              / (  C_SJR263[SJR_PULSE]
                 + I_SJR258 ) }
}
! Calculate EC at SJR Mile 256.
define EC_SJR256 {
    case NearZero {
        condition (  C_SJR258[SJR_PULSE]
                   + SG55_SJR256_7[SJR_PULSE] ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_SJR258       * C_SJR258[SJR_PULSE]
               + EC_SJR258       * min(SG55_SJR256_7[SJR_PULSE], 0.)
               + EC_SG_UpperSJR  * max(SG55_SJR256_7[SJR_PULSE], 0.) )
              / (  C_SJR258[SJR_PULSE]
                 + SG55_SJR256_7[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 249.
define EC_SJR249 {
    case NearZero {
        condition (  C_SJR256[SJR_PULSE]
                   + SG56_SJR249_7[SJR_PULSE] ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_SJR256       * C_SJR256[SJR_PULSE]
               + EC_SJR256       * min(SG56_SJR249_7[SJR_PULSE], 0.)
               + EC_SG_UpperSJR  * max(SG56_SJR249_7[SJR_PULSE], 0.) )
              / (  C_SJR256[SJR_PULSE]
                 + SG56_SJR249_7[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 242.
define EC_SJR242 {
    case NearZero {
        condition (  C_SJR249[SJR_PULSE]
                   + SG57_SJR242_7[SJR_PULSE] ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_SJR249       * C_SJR249[SJR_PULSE]
               + EC_SJR249       * min(SG57_SJR242_7[SJR_PULSE], 0.)
               + EC_SG_UpperSJR  * max(SG57_SJR242_7[SJR_PULSE], 0.) )
              / (  C_SJR249[SJR_PULSE]
                 + SG57_SJR242_7[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 235.
define EC_SJR235 {
    case NearZero {
        condition (  C_SJR242[SJR_PULSE]
                   + SG58_SJR235_7[SJR_PULSE]
                   + R_64_PA1_SJR235[SJR_PULSE] ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_SJR242       * C_SJR242[SJR_PULSE]
               + EC_SJR242       * min(SG58_SJR235_7[SJR_PULSE], 0.)
               + EC_SG_UpperSJR  * max(SG58_SJR235_7[SJR_PULSE], 0.)
               + EC_R_64PA1      * R_64_PA1_SJR235[SJR_PULSE] )
              / (  C_SJR242[SJR_PULSE]
                 + SG58_SJR235_7[SJR_PULSE]
                 + R_64_PA1_SJR235[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 227.
define EC_SJR227 {
    case NearZero {
        condition (  C_SJR235[SJR_PULSE]
                   + SR_64_SJR227[SJR_PULSE]
                   + SG59_SJR227_7[SJR_PULSE] ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_SJR235      * C_SJR235[SJR_PULSE]
               + EC_SR_64       * SR_64_SJR227[SJR_PULSE]
               + EC_SJR235      * min(SG59_SJR227_7[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG59_SJR227_7[SJR_PULSE], 0.) )
              / (  C_SJR235[SJR_PULSE]
                 + SR_64_SJR227[SJR_PULSE]
                 + SG59_SJR227_7[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 225.
define EC_SJR225 {value EC_SJR227}
! Calculate EC at SJR Mile 221.
define EC_SJR221 {
    case NearZero {
        condition (  C_SJR225[SJR_PULSE]
                   + SG60_SJR221_7[SJR_PULSE] ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_SJR225       * C_SJR225[SJR_PULSE]
               + EC_SJR225       * min(SG60_SJR221_7[SJR_PULSE], 0.)
               + EC_SG_UpperSJR  * max(SG60_SJR221_7[SJR_PULSE], 0.) )
              / (  C_SJR225[SJR_PULSE]
                 + SG60_SJR221_7[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 214.
define EC_SJR214 {
    case NearZero {
        condition (  C_SJR221[SJR_PULSE]
                   + SG61_SJR214_7[SJR_PULSE]
                   + SR_64_SJR214[SJR_PULSE] ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_SJR221      * C_SJR221[SJR_PULSE]
               + EC_SJR221      * min(SG61_SJR214_7[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG61_SJR214_7[SJR_PULSE], 0.)
               + EC_SR_64       * SR_64_SJR214[SJR_PULSE] )
              / (  C_SJR221[SJR_PULSE]
                 + SG61_SJR214_7[SJR_PULSE]
                 + SR_64_SJR214[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 213.
define EC_SJR213 {value EC_SJR214}
! Calculate EC at SJR Mile 205.
define EC_SJR205 {
    case NearZero {
        condition (  C_SJR213[SJR_PULSE]
                   + SG62_SJR205_7[SJR_PULSE]
                   + SG63_SJR205_8[SJR_PULSE] ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_SJR213       * C_SJR213[SJR_PULSE]
               + EC_SJR213       * min(SG62_SJR205_7[SJR_PULSE], 0.)
               + EC_SG_UpperSJR  * max(SG62_SJR205_7[SJR_PULSE], 0.)
               + EC_SJR213       * min(SG63_SJR205_8[SJR_PULSE], 0.)
               + EC_SG_UpperSJR  * max(SG63_SJR205_8[SJR_PULSE], 0.) )
              / (  C_SJR213[SJR_PULSE]
                 + SG62_SJR205_7[SJR_PULSE]
                 + SG63_SJR205_8[SJR_PULSE] ) }
}
! Calculate EC from Mendota Pool.
define EC_MDOTA {
    case NearZero {
        condition (  C_SJR205[SJR_PULSE]
                   + SG_MDOTA_872[SJR_PULSE]
                   + C_DMC116[SJR_PULSE]
                   + C_FSL005[SJR_PULSE] ) < small_flow
        value 0.0 }
    case otherwise {
        condition always
        value (  EC_SJR205       * C_SJR205[SJR_PULSE]
               + EC_SJR205       * min(SG_MDOTA_872[SJR_PULSE], 0.)
               + EC_SG_UpperSJR  * max(SG_MDOTA_872[SJR_PULSE], 0.)
               + EC_DMC116       * C_DMC116[SJR_PULSE]
               + EC_FSL005       * C_FSL005[SJR_PULSE] )
              / (  C_SJR205[SJR_PULSE]
                 + SG_MDOTA_872[SJR_PULSE]
                 + C_DMC116[SJR_PULSE]
                 + C_FSL005[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 201.
define EC_SJR201 {
    case NearZero {
        condition (  C_MDOTA[SJR_PULSE]
                   + D_SJR205_SJR201[SJR_PULSE] ) < small_flow
        value     0.0}
    case otherwise {
        condition always
        value (  EC_MDOTA  * C_MDOTA[SJR_PULSE]
               + EC_SJR205 * D_SJR205_SJR201[SJR_PULSE] )
              / (  C_MDOTA[SJR_PULSE]
                 + D_SJR205_SJR201[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 200.
define EC_SJR200 {value EC_SJR201}
! Calculate EC at SJR Mile 198.
define EC_SJR198 {
    case NearZero {
        condition (  C_SJR200[SJR_PULSE]
                   + SG64_SJR198_8[SJR_PULSE] ) < small_flow
        value     0.0}
    case otherwise {
        condition always
        value (  EC_SJR200       * C_SJR200[SJR_PULSE]
               + EC_SJR200       * min(SG64_SJR198_8[SJR_PULSE], 0.)
               + EC_SG_UpperSJR  * max(SG64_SJR198_8[SJR_PULSE], 0.) )
              / (  C_SJR200[SJR_PULSE]
                 + SG64_SJR198_8[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 195.
define EC_SJR195 {
    case NearZero {
        condition (  C_SJR198[SJR_PULSE]
                   + C_FBW001[SJR_PULSE] ) < small_flow
        value     0.0}
    case otherwise {
        condition always
        value (  EC_SJR198   * C_SJR198[SJR_PULSE]
               + EC_WWTPR_GD * C_FBW001[SJR_PULSE] )
              / (  C_SJR198[SJR_PULSE]
                 + C_FBW001[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 192.
define EC_SJR192 {
    case NearZero {
        condition (  C_SJR195[SJR_PULSE]
                   + SG65_SJR192_8[SJR_PULSE] ) < small_flow
        value     0.0}
    case otherwise {
        condition always
        value (  EC_SJR195       * C_SJR195[SJR_PULSE]
               + EC_SJR195       * min(SG65_SJR192_8[SJR_PULSE], 0.)
               + EC_SG_UpperSJR  * max(SG65_SJR192_8[SJR_PULSE], 0.) )
              / (  C_SJR195[SJR_PULSE]
                 + SG65_SJR192_8[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 185.
define EC_SJR185 {
    case NearZero {
        condition (  C_SJR192[SJR_PULSE]
                   + SG66_SJR185_8[SJR_PULSE]
                   + R_64_XA_SJR185[SJR_PULSE] ) < small_flow
        value     0.0}
    case otherwise {
        condition always
        value (  EC_SJR192      * C_SJR192[SJR_PULSE]
               + EC_SJR192      * min(SG66_SJR185_8[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG66_SJR185_8[SJR_PULSE], 0.)
               + EC_R_64_XA     * R_64_XA_SJR185[SJR_PULSE] )
              / (  C_SJR192[SJR_PULSE]
                 + SG66_SJR185_8[SJR_PULSE]
                 + R_64_XA_SJR185[SJR_PULSE] ) }
}
! Calculate EC at SJR 180.
define EC_SJR180 {
    case NearZero {
        condition (  C_SJR185[SJR_PULSE]
                   + SG67_SJR180_8[SJR_PULSE]
                   + SR_64_SJR180[SJR_PULSE] ) < small_flow
        value     0.0 }
    case otherwise {
        condition always
        value (  EC_SJR185      * C_SJR185[SJR_PULSE]
               + EC_SJR185      * min(SG67_SJR180_8[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG67_SJR180_8[SJR_PULSE], 0.)
               + EC_SR_64       * SR_64_SJR180[SJR_PULSE] )
              / (  C_SJR185[SJR_PULSE]
                 + SG67_SJR180_8[SJR_PULSE]
                 + SR_64_SJR180[SJR_PULSE] ) }
}
! Calculate EC at SJR 179.
define EC_SJR179 {value EC_SJR180}
! Calculate EC at SJR Mile 173.
define EC_SJR173 {
    case NearZero {
        condition (  C_SJR179[SJR_PULSE]
                   + SG68_SJR173_8[SJR_PULSE]
                   + SG78_SJR173_10[SJR_PULSE] ) < small_flow
        value     0.0 }
    case otherwise {
        condition always
        value (  EC_SJR179      * C_SJR179[SJR_PULSE]
               + EC_SJR179      * min(SG68_SJR173_8[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG68_SJR173_8[SJR_PULSE], 0.)
               + EC_SJR179      * min(SG78_SJR173_10[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG78_SJR173_10[SJR_PULSE], 0.) )
              / (  C_SJR179[SJR_PULSE]
                 + SG68_SJR173_8[SJR_PULSE]
                 + SG78_SJR173_10[SJR_PULSE] ) }
}
! Calculate EC at SJR 166.
define EC_SJR166 {
    case NearZero {
        condition (  C_SJR173[SJR_PULSE]
                   + SG79_SJR166_10[SJR_PULSE]
                   + SG89_SJR166_12[SJR_PULSE] ) < small_flow
        value     0.0 }
    case otherwise {
        condition always
        value (  EC_SJR173      * C_SJR173[SJR_PULSE]
               + EC_SJR173      * min(SG79_SJR166_10[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG79_SJR166_10[SJR_PULSE], 0.)
               + EC_SJR173      * min(SG89_SJR166_12[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG89_SJR166_12[SJR_PULSE], 0.) )
              / (  C_SJR173[SJR_PULSE]
                 + SG79_SJR166_10[SJR_PULSE]
                 + SG89_SJR166_12[SJR_PULSE] ) }
}
! Calculate EC at SJR 157.
define EC_SJR157 {
    case NearZero {
        condition (  C_SJR166[SJR_PULSE]
                   + SG90_SJR157_12[SJR_PULSE] ) < small_flow
        value     0.0 }
    case otherwise {
        condition always
        value (  EC_SJR166      * C_SJR166[SJR_PULSE]
               + EC_SJR166      * min(SG90_SJR157_12[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG90_SJR157_12[SJR_PULSE], 0.) )
              / (  C_SJR166[SJR_PULSE]
                 + SG90_SJR157_12[SJR_PULSE] ) }
}
! Calculate EC at SJR 152.
define EC_SJR152 {
    case NearZero {
        condition (  C_SJR157[SJR_PULSE]
                   + SG91_SJR152_12[SJR_PULSE] ) < small_flow
        value     0.0 }
    case otherwise {
        condition always
        value (  EC_SJR157      * C_SJR157[SJR_PULSE]
               + EC_SJR157      * min(SG91_SJR152_12[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG91_SJR152_12[SJR_PULSE], 0.) )
              / (  C_SJR157[SJR_PULSE]
                 + SG91_SJR152_12[SJR_PULSE] ) }
}
! Calculate EC at SJR 145.
define EC_SJR145 {
    case NearZero {
        condition (  C_SJR152[SJR_PULSE]
                   + SG92_SJR145_12[SJR_PULSE]
                   + SG102_SJR145_14[SJR_PULSE]
                   + SP_EBP041_SJR145[SJR_PULSE] ) < small_flow
        value     0.0 }
    case otherwise {
        condition always
        value (  EC_SJR152      * C_SJR152[SJR_PULSE]
               + EC_SJR152      * min(SG92_SJR145_12[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG92_SJR145_12[SJR_PULSE], 0.)
               + EC_SJR152      * min(SG102_SJR145_14[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG102_SJR145_14[SJR_PULSE], 0.)
               + EC_SP_EBP041_SJR145 * SP_EBP041_SJR145[SJR_PULSE] )
              / (  C_SJR152[SJR_PULSE]
                 + SG92_SJR145_12[SJR_PULSE]
                 + SG102_SJR145_14[SJR_PULSE]
                 + SP_EBP041_SJR145[SJR_PULSE] ) }
}
! Calculate EC at SJR 141.
define EC_SJR141 {
    case NearZero {
        condition (  C_SJR145[SJR_PULSE]
                   + SG103_SJR141_14[SJR_PULSE] ) < small_flow
        value     0.0 }
    case otherwise {
        condition always
        value (  EC_SJR145      * C_SJR145[SJR_PULSE]
               + EC_SJR145      * min(SG103_SJR141_14[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG103_SJR141_14[SJR_PULSE], 0.) )
              / (  C_SJR145[SJR_PULSE]
                 + SG103_SJR141_14[SJR_PULSE] ) }
}
! Calculate EC at SJR 134.
define EC_SJR134 {
    case NearZero {
        condition (  C_SJR141[SJR_PULSE]
                   + SG104_SJR134_14[SJR_PULSE]
                   + SG113_SJR134_16[SJR_PULSE]
                   + SR_63_SJR134[SJR_PULSE]
                   + R_63_PR3_SJR134[SJR_PULSE]
                   + C_EBP050[SJR_PULSE] ) < small_flow
        value     0.0 }
    case otherwise {
        condition always
        value (  EC_SJR141      * C_SJR141[SJR_PULSE]
               + EC_SJR141      * min(SG104_SJR134_14[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG104_SJR134_14[SJR_PULSE], 0.)
               + EC_SJR141      * min(SG113_SJR134_16[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG113_SJR134_16[SJR_PULSE], 0.)
               + EC_SR_63       * SR_63_SJR134[SJR_PULSE]
               + EC_R_63_PR3    * R_63_PR3_SJR134[SJR_PULSE]
               + EC_EBP050      * C_EBP050[SJR_PULSE] )
              / (  C_SJR141[SJR_PULSE]
                 + SG104_SJR134_14[SJR_PULSE]
                 + SG113_SJR134_16[SJR_PULSE]
                 + SR_63_SJR134[SJR_PULSE]
                 + R_63_PR3_SJR134[SJR_PULSE]
                 + C_EBP050[SJR_PULSE] ) }
}
! Calculate EC at SJR Mile 131.
define EC_SJR131 {value EC_SJR134}
! Calculate EC at SJR 127.
define EC_SJR127 {
    case NearZero {
        condition (  C_SJR131[SJR_PULSE]
                   + C_SAL006[SJR_PULSE] ) < small_flow
        value     0.0 }
    case otherwise {
        condition always
        value (  EC_SJR131 * C_SJR131[SJR_PULSE]
               + EC_SAL006 * C_SAL006[SJR_PULSE] )
              / (  C_SJR131[SJR_PULSE]
                 + C_SAL006[SJR_PULSE] ) }
}
! Calculate EC at SJR 123.
define EC_SJR123 {
    case NearZero {
        condition (  C_SJR127[SJR_PULSE]
                   + SG114_SJR123_16[SJR_PULSE]
                   + CT_Stevinson[SJR_PULSE] ) < small_flow
        value     0.0 }
    case otherwise {
        condition always
        value (  EC_SJR127      * C_SJR127[SJR_PULSE]
               + EC_SJR127      * min(SG114_SJR123_16[SJR_PULSE], 0.)
               + EC_SG_UpperSJR * max(SG114_SJR123_16[SJR_PULSE], 0.)
               + EC_SJR127      * min(CT_Stevinson[SJR_PULSE], 0.)
               + EC_STEVE_GD    * max(CT_Stevinson[SJR_PULSE], 0.) )
              / (  C_SJR127[SJR_PULSE]
                 + SG114_SJR123_16[SJR_PULSE]
                 + CT_Stevinson[SJR_PULSE] ) }
}
! Output results to DV file.
define EC_MLRTN_DV  {alias EC_MLRTN  kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR265_DV {alias EC_SJR265 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR263_DV {alias EC_SJR263 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR258_DV {alias EC_SJR258 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR256_DV {alias EC_SJR256 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR249_DV {alias EC_SJR249 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR242_DV {alias EC_SJR242 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR235_DV {alias EC_SJR235 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR227_DV {alias EC_SJR227 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR225_DV {alias EC_SJR225 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR221_DV {alias EC_SJR221 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR214_DV {alias EC_SJR214 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR213_DV {alias EC_SJR213 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR205_DV {alias EC_SJR205 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_MDOTA_DV  {alias EC_MDOTA  kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR201_DV {alias EC_SJR201 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR200_DV {alias EC_SJR200 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR198_DV {alias EC_SJR198 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR195_DV {alias EC_SJR195 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR192_DV {alias EC_SJR192 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR185_DV {alias EC_SJR185 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR180_DV {alias EC_SJR180 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR179_DV {alias EC_SJR179 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR173_DV {alias EC_SJR173 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR166_DV {alias EC_SJR166 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR157_DV {alias EC_SJR157 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR152_DV {alias EC_SJR152 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR145_DV {alias EC_SJR145 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR141_DV {alias EC_SJR141 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_EBP050_DV {alias EC_EBP050 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR134_DV {alias EC_SJR134 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR131_DV {alias EC_SJR131 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SAL006_DV {alias EC_SAL006 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR127_DV {alias EC_SJR127 kind 'EC-DEBUG' units 'UMHOS/CM'}
define EC_SJR123_DV {alias EC_SJR123 kind 'EC-DEBUG' units 'UMHOS/CM'}
