! Friant_delivery.wresl
! Created for Upper San Joaquin Basin Storage Investigation project
!###################################################################################

/*
Friant-Kern and Madera Canal additional deliveries
*/
! Friant-Kern Canal capacity at head
define FK_cap_head {value 5000.0 }
! Madera Canal capacity at head
define Madera_cap_head {value 1250.0 }
! Maximum allowed additional Friant-Kern Canal delivery
define FK_fl_cap {value 1200.0 }
! Maximum allowed additional Madera Canal delivery
define Madera_fl_cap {value 200.0 }

! Read Madera Canal loss from lookup table
define Madera_loss {
    select Madera_inc
    from Friant_canal_losses
    where month = month }
! added to account for CALSIM Friant loss function
goal set_D_MLRTN_MDC_loss { D_MLRTN_MDC_loss < D_MDC006_MDCLOS   }

! Limit Madera Canal losses to max values previously defined in lookup table
goal set_D_MDC006_MDCLOS  { D_MDC006_MDCLOS  < Madera_loss*taf_cfs }

! Read Friant-Kern Canal loss from lookup table
define FK_loss {
    select FK_inc
    from Friant_canal_losses
    where month = month }
    
! Friant Kern Losses
goal set_D_MLRTN_FRK_loss { D_MLRTN_FRK_loss < FK_loss*taf_cfs}


/*
This file implements Friant delivery logic, breakdown of deliveries by canal and class
Incorporates projected canal losses into delivery requirement
*/
! Look up percent of Class 1 allocation to Friant-Kern Canal
define Pct_C1_FK {
    select FK
    from Friant_Allocation
    where item = 1 }
! Look up percent of Class 1 allocation to Madera Canal
define Pct_C1_Madera {
    select Madera
    from Friant_Allocation
    where item = 1 }
! Look up percent of Class 2 allocation to Friant-Kern Canal
define Pct_C2_FK {
    select FK
    from Friant_Allocation
    where item = 2 }
! Look up percent of Class 2 allocation to Madera Canal
define Pct_C2_Madera {
    select Madera
    from Friant_Allocation
    where item = 2 }

/*
Define annual class 1 allocated
Note: "Class1_alloc" is the class1 allocation from current month through the end of year
and annual class1 allocation is Class 1 water delivered through the previous month plus
the Class 1 allocation from the current month through the end of the year
this variable is needed to access previous values of class 1 allocation
*/
define ann_C1_alloc { upper unbounded lower unbounded kind 'TEMPORARY' units 'taf'}
! Annual Class 1 allocation equals to the amount of Class 1 allocated and Class 1 delivered combined
goal set_ann_C1_alloc { ann_C1_alloc = Class1_delivered + Class1_alloc}

! Annual Friant-Kern Canal Class 1 delivery computation - updated monthly through June
define Ann_FK_C1 {
    case initial_case {
        condition month == oct .and. wateryear == BgnWY
        value 0 }
    case MarthruJun {
         condition   month >= mar .and. month <= jun
         value (Class1_alloc + Class1_delivered) *  Pct_C1_FK / 100. }
    case otherwise {
        condition always
        value ann_C1_alloc(-1) *  Pct_C1_FK / 100. }}

! Annual Madera Canal Class 1 delivery computation - updated monthly
define Ann_Madera_C1 {
    case initial_case {
        condition month == oct .and. wateryear == BgnWY
        value 0 }
    case MarthruJun {
         condition   month >= mar .and. month <= jun
         value (Class1_alloc + Class1_delivered) *  Pct_C1_Madera / 100. }
    case otherwise {
        condition always
        value ann_C1_alloc(-1) *  Pct_C1_Madera / 100. }}

! Annual Friant-Kern Canal Class 2 delivery computation - updated monthly
define Ann_FK_C2 {
    case initial_case {
        condition month == oct .and. wateryear == BgnWY
        value 0.0 }
    case otherwise {
        condition always
        value (class2_alloc + Class2_delivered) *  Pct_C2_FK / 100. }}

! Annual Madera Canal Class 2 delivery computation - updated monthly
define Ann_Madera_C2 {
    case initial_case {
        condition month == oct .and. wateryear == BgnWY
        value 0.0 }
    case otherwise {
        condition always
        value (Class2_alloc + Class2_delivered) *  Pct_C2_Madera / 100. } }

! Annual Friant-Kern Canal delivery amount (Class 1 and 2 combined)
define Ann_FK_tot  { value Ann_FK_C1 + Ann_FK_C2 }
! Annual Madera Canal delivery amount (Class 1 and 2 combined)
define Ann_Madera_tot { value Ann_Madera_C1 + Ann_Madera_C2 }
! Annual total Friant (Friant-Kern + Madera) delivery amount
define Ann_Fr_tot { value Ann_FK_tot + Ann_Madera_tot }

! Look up total delivery pattern for Friant-Kern Canal
define FK_tot_pct {
    select percent
    from FK_delivery_total
    given delivery = Ann_Fr_tot
    use minimum
    where month = month }

! Look up Class 1 delivery pattern for Friant-Kern Canal
define FK_C1_pct {
    select percent
    from FK_delivery_class1
    given delivery = Ann_Fr_tot
    use minimum
    where month = month }

! Look up total delivery pattern for Madera Canal
define Madera_tot_pct {
    select percent
    from Madera_delivery_total
    given delivery = Ann_Fr_tot
    use minimum
    where month = month }

! Look up Class 1 delivery pattern for Madera Canal
define Madera_C1_pct {
    select percent
    from Madera_delivery_class1
    given delivery = Ann_Fr_tot
    use minimum
    where month = month }

define sum_Mad_tot_pct {std kind 'percentage-delivered' units 'none'}
define sum_Mad_C1_pct {std kind 'percentage-delivered' units 'none'}

define sum_Mad_tot_pct_ {
    case March {
        condition   month == mar
        value       0.
    }
    case otherwise {
        condition   always
        value       sum_Mad_tot_pct(-1) + Madera_tot_pct
    }
}
define sum_Mad_C1_pct_ {
    case March {
        condition   month == mar
        value       0.
    }
    case otherwise {
        condition   always
        value       sum_Mad_C1_pct(-1) + Madera_C1_pct
    }
}

goal set_sum_Mad_tot_pct {sum_Mad_tot_pct = sum_Mad_tot_pct_}
goal set_sum_Mad_C1_pct {sum_Mad_C1_pct = sum_Mad_C1_pct_}

define rem_Mad_tot_pct_ {
    case March {
        condition   month == mar
        value       100.
    }
    case otherwise {
        condition   always
        value max(0.,100. - sum_Mad_tot_pct(-1))
    }
}

define rem_Mad_C1_pct_ {
    case March {
        condition   month == mar
        value       100.
    }
    case otherwise {
        condition   always
        value max(0.,100. - sum_Mad_C1_pct(-1))
    }
}

define rem_Mad_tot_pct {alias rem_Mad_tot_pct_ kind 'percentage-remaining' units 'none'}
define rem_Mad_C1_pct {alias rem_Mad_tot_pct_ kind 'percentage-remaining' units 'none'}

define Mad_C1_frc {
    case denom_zero {
        condition   rem_Mad_C1_pct_ < 0.1
        value       0.}
    case OctToFeb {
        condition   month <= 5
        value       1.}
    case otherwise {
        condition   always
        value min(1.,Madera_C1_pct/rem_Mad_C1_pct_)}
}
define Mad_tot_frc {
    case denom_zero {
        condition   rem_Mad_tot_pct_ < 0.1
        value       0.
    }
    case OctToFeb {
        condition   month <= 5
        value       1.
    }
    case otherwise {
        condition   always
        value min(1.,Madera_tot_pct/rem_Mad_tot_pct_)
    }
}

!define Ann_Fr_tot_out {alias Ann_Fr_tot kind 'temp' units 'taf'}
!define FK_tot_pct_out {alias FK_tot_pct kind 'temp' units 'taf'}
!define FK_C1_pct_out {alias FK_C1_pct kind 'temp' units 'taf'}
define MC_tot_pct_out {alias Madera_tot_pct kind 'temp' units 'taf'}
define MC_C1_pct_out {alias Madera_C1_pct kind 'temp' units 'taf'}
define Mad_C1_frc_out {alias Mad_C1_frc kind 'temp' units 'taf'}
define Mad_tot_frc_out {alias Mad_tot_frc kind 'temp' units 'taf'}


! Calculation of Friant-Kern Canal Class 1 delivery based on lookup pattern
define FK_C1_del { value (FK_C1_pct / 100.) * Ann_FK_C1 }

! Calculation of Madera Canal Class 1 delivery based on lookup pattern
define Madera_C1_del { value (Madera_C1_pct / 100.) * Ann_Madera_C1 }

! Calculation of Friant-Kern Canal total delivery based on lookup pattern
define FK_tot_del { value (FK_tot_pct / 100.) * Ann_FK_tot }

! Calculation of monthly Madera Canal total delivery based on lookup pattern
define Madera_tot_del { value (Madera_tot_pct / 100.) * Ann_Madera_tot }

! Calculation of Friant-Kern Canal Class 2 delivery (total - Class 1)
define FK_C2_del { value max(0.,FK_tot_del - FK_C1_del) }

! Calculation of Madera Canal Class 2 delivery (total - Class 1)
define Madera_C2_del { value max(0., Madera_tot_del - Madera_C1_del) }

! Total monthly (Friant-Kern + Madera Canal) delivery
define tot_del { value Madera_tot_del + FK_tot_del }

! Total monthly (Friant-Kern + Madera Canal) Class 1 delivery
goal set_tot_C1_del {tot_C1_del = Madera_C1_del + FK_C1_del }

! Total monthly (Friant-Kern + Madera Canal) Class 2 delivery
goal set_tot_C2_del {tot_C2_del = Madera_C2_del + FK_C2_del }

! Define temporary variable for total_del
define temp005 { upper unbounded lower unbounded kind 'TEMPORARY' units 'taf'}
! Set temporally variable equal to tot_del
goal set_temp005 { temp005 = tot_del }
! Define temporary variable for total_class1_del
define temp006 { upper unbounded lower unbounded kind 'TEMPORARY' units 'taf'}
! Set temporally variable equal to tot_C1_del
goal set_temp006 { temp006 = tot_C1_del }
! Define temporary variable for total_class2_del
define temp007 { upper unbounded lower unbounded kind 'TEMPORARY' units 'taf'}
! Set temporally variable equal to tot_C2_del
goal set_temp007 { temp007 = tot_C2_del }

! Temporary variable to compute total delivery through previous month
define temp008 {
    case initial_case {
        condition month <= mar .and. wateryear == BgnWY
        value 0. }
    case otherwise {
        condition always
        sum(i=prevmar,-1,1) temp005(i)} }

! Temporary variable to compute Class 1 delivery through previous month
define temp009 {
    case initial_case {
        condition month <= mar .and. wateryear == BgnWY
        value 0. }
    case otherwise {
        condition always
        sum(i=prevmar,-1,1) temp006(i)} }

define temp009dv {alias temp009 kind 'temp' units 'TAF'}

! Temporary variable to compute Class 2 delivery through previous month
define temp010 {
    case initial_case {
        condition month <= mar .and. wateryear == BgnWY
        value 0. }
    case otherwise {
        condition always
        sum(i=prevmar,-1,1) temp007(i)} }

! Total delivery from Friant through current month
define tot_del_mon { std kind 'FRIANT-DEL' units 'taf' }
! Temporary variable for monthly total delivery
goal set_temp008 { tot_del_mon = temp008 + tot_del }

! Total Class 1 delivery from Friant through current month
define tot_del_C1_mon { std kind 'FRIANT-DEL' units 'taf' }
! Temporary variable for monthly Class 1 delivery
goal set_temp009 { tot_del_c1_mon = temp009 + tot_C1_del }

! Total Class 2 delivery from Friant through current month
define tot_del_C2_mon { std kind 'FRIANT-DEL' units 'taf' }
! Temporary variable for monthly Class 2 delivery
goal set_temp010 { tot_del_c2_mon = temp010 + tot_C2_del }

! Define estimate of Friant-Kern Canal release (initial demand estimate + canal loss)
define D_MLRTN_FRK_ini { value FK_C1_del + FK_C2_del + FK_loss }

! Define estimate of Madera Canal release (initial demand estimate + canal loss)
define D_MLRTN_MDC_ini { value Madera_C1_del + Madera_C2_del + Madera_loss }

